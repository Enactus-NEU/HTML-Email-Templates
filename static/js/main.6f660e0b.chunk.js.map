{"version":3,"sources":["component/ImportText.js","component/ImportSection.js","component/List.js","component/Image.js","component/Para.js","component/Title.js","component/template/training_email.js","component/edited_email.js","App.js","index.js"],"names":["ImportText","className","autoFocus","onChange","this","props","onChangeValue","minRows","row","maxRows","value","id","React","Component","ImportSection","state","type","handleImport","bind","handleSelectChange","handleChangeValue","e","setState","target","importValue","data","name","onClick","List","text","medium","index","updatedItems","items","updatedItem","handleChangeFormat","slice","style","listStyleType","options","toolbar","buttons","handleChangeFormatList","Image","backgroundImage","backgroundRepeat","backgroundSize","backgroundPosition","height","width","borderRadius","Para","onDragStart","draggedItem","dataTransfer","effectAllowed","onDragOver","draggedOverItem","filter","item","splice","dragAndDropChild","onDragEnd","handleDelete","padding","listStyle","map","fontSize","fontFamily","color","lineHeight","textAlign","whiteSpace","draggable","handleChangeFormatText","Title","getNewTitle","margin","fontWeight","handleChange","TrainingEmail","border","cellSpacing","cellPadding","backgroundColor","minWidth","paddingBottom","children","EditedEmail","template","export","handleExport","range","sel","elTable","document","querySelector","createRange","window","getSelection","removeAllRanges","selectNodeContents","addRange","selectNode","execCommand","alert","title","formatTitle","dragAndDrop","require","App","textValue","getTextValue","localStorage","getItem","setItem","JSON","stringify","parse","push","newValue","newTitle","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.6f660e0b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport TextareaAutosize from \"react-textarea-autosize\";\r\n\r\nclass ImportText extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"ImportText\">\r\n        <TextareaAutosize\r\n          autoFocus\r\n          onChange={this.props.onChangeValue}\r\n          minRows={this.props.row}\r\n          maxRows={25}\r\n          value={this.props.value}\r\n          id=\"TextareaAutosize\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImportText;\r\n","import React, { Component } from \"react\";\r\nimport ImportText from \"./ImportText\";\r\n\r\nclass ImportSection extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      value: \"\",\r\n      type: \"Text\"\r\n    };\r\n\r\n    this.handleImport = this.handleImport.bind(this);\r\n\r\n    this.handleSelectChange = this.handleSelectChange.bind(this);\r\n\r\n    this.handleChangeValue = this.handleChangeValue.bind(this);\r\n  }\r\n  handleChangeValue(e) {\r\n    this.setState({ value: e.target.value });\r\n  }\r\n  handleSelectChange(e) {\r\n    this.setState({ type: e.target.value });\r\n  }\r\n  handleImport() {\r\n    if (this.state.value) {\r\n      this.props.importValue({ data: this.state.value, type: this.state.type });\r\n      this.setState({value: \"\"})\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"ImportSection\">\r\n        <div className=\"ButtonGroup\">\r\n          <select name=\"type\" id=\"type\" onChange={this.handleSelectChange}>\r\n            <option value=\"Text\">Text</option>\r\n            <option value=\"Title\">Title</option>\r\n            <option value=\"List\">List</option>\r\n            <option value=\"Image\">Image</option>\r\n            <option value=\"Video\">Video</option>\r\n          </select>\r\n          <div className=\"ImportButton\" onClick={this.handleImport}>\r\n            Import\r\n          </div>\r\n        </div>\r\n        {\r\n          (this.state.type === \"Text\" || this.state.type === \"List\")  && <ImportText row={20} value={this.state.value} onChangeValue={this.handleChangeValue} />\r\n        }\r\n        {\r\n          this.state.type === \"Title\" && <ImportText row={5} value={this.state.value} onChangeValue={this.handleChangeValue} />\r\n        }\r\n        {\r\n         this.state.type === \"Image\"  && <ImportText row={1} value={this.state.value} onChangeValue={this.handleChangeValue} /> \r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImportSection;\r\n","import React from \"react\"\r\nimport \"../style.css\"\r\n\r\nimport Editor from \"react-medium-editor\"\r\n\r\nclass List extends React.Component {\r\n    handleChangeFormatList(text, medium, index) {\r\n        const updatedItems = this.props.items;\r\n        const updatedItem = this.props.items[index]\r\n        this.props.handleChangeFormat([...updatedItems.slice(0, index), { data: text, type: updatedItem.type }, ...updatedItems.slice(index + 1)]);\r\n    }\r\n    render() {\r\n        return(\r\n            <div className=\"List\">\r\n                <ul style={{listStyleType: \"disc\"}}>\r\n                    <li>\r\n                        <Editor \r\n                            options={{ toolbar: { buttons: ['bold', 'italic', 'underline', 'anchor'] } }} \r\n                            text={this.props.value} \r\n                            onChange={(text, medium) => {this.handleChangeFormatList(text, medium, this.props.index)}}\r\n                        />\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default List;","import React from \"react\"\r\nimport \"../style.css\"\r\n\r\nclass Image extends React.Component {\r\n    render() {\r\n        return(\r\n            <div \r\n                className=\"Image\" \r\n                style={{\r\n                    backgroundImage: `url(${this.props.value})`,\r\n                    backgroundRepeat: \"no-repeat\",\r\n                    backgroundSize: \"cover\",\r\n                    backgroundPosition: \"center\",\r\n                    height: \"200px\",\r\n                    width: \"570px\",\r\n                    borderRadius: \"20px\",\r\n                }}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\nexport default Image;","import React from \"react\"\r\nimport \"../style.css\"\r\n\r\nimport Editor from 'react-medium-editor';\r\n\r\nimport List from \"./List\"\r\nimport Image from \"./Image\"\r\n\r\nclass Para extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.handleDelete = this.handleDelete.bind(this)\r\n    }\r\n    onDragStart = (e, index) => {\r\n        this.draggedItem = this.props.value[index];\r\n        e.dataTransfer.effectAllowed = \"move\";\r\n    };\r\n    onDragOver = index => {\r\n        const draggedOverItem = this.props.value[index];\r\n    \r\n        // if the item is dragged over itself, ignore\r\n        if (this.draggedItem === draggedOverItem) {\r\n          return;\r\n        }\r\n    \r\n        // filter out the currently dragged item\r\n        let value = this.props.value.filter(item => item !== this.draggedItem);\r\n    \r\n        // add the dragged item after the dragged over item\r\n        value.splice(index, 0, this.draggedItem);\r\n    \r\n        this.props.dragAndDropChild(value)\r\n    };\r\n    onDragEnd = () => {\r\n        this.draggedItem = null;\r\n      };\r\n    handleDelete(index) {\r\n        const updatedItem = this.props.value;\r\n        updatedItem.splice(index, 1)\r\n        this.props.dragAndDropChild(updatedItem)\r\n    }\r\n    handleChangeFormatText(text, medium, index) {\r\n        const updatedItems = this.props.value;\r\n        const updatedItem = this.props.value[index]\r\n        this.props.dragAndDropChild([...updatedItems.slice(0, index), { data: text, type: updatedItem.type }, ...updatedItems.slice(index + 1)]);\r\n    }\r\n    render() {\r\n        return(\r\n            <div className=\"Para\">{\r\n                <ul style={{padding: \"0px\", listStyle: \"none\"}}>\r\n                {\r\n                    this.props.value.map((item, index) => {\r\n                        return (\r\n                            <li key={index} onDragOver={() => this.onDragOver(index)}>\r\n                                <div \r\n                                    className=\"TextValue\"\r\n                                    style={{\r\n                                        padding: '16px 40px 13px 40px', \r\n                                        fontSize: '1.07rem', \r\n                                        fontFamily: 'sans-serif', \r\n                                        color: '#555', \r\n                                        lineHeight: '1.4rem', \r\n                                        textAlign: 'justify',\r\n                                        whiteSpace: \"pre-line\"\r\n                                    }}\r\n                                    draggable\r\n                                    onDragStart={e => this.onDragStart(e, index)}\r\n                                    onDragEnd={this.onDragEnd}\r\n                                    >\r\n                                        {item.type === \"Text\" && <Editor \r\n                                                                    options={{ toolbar: { buttons: ['bold', 'italic', 'underline', 'anchor'] }}} \r\n                                                                    text={item.data} \r\n                                                                    onChange={(text, medium) => {this.handleChangeFormatText(text, medium, index)}}\r\n                                                                />}\r\n                                        {item.type === \"List\" && <List items={this.props.value} handleChangeFormat={this.props.dragAndDropChild} index={index} value={item.data} /> }\r\n                                        {item.type === \"Image\" && <Image value={item.data} /> }\r\n                                    <div onClick={() => {this.handleDelete(index)}} className=\"DeleteButton\">🗑</div>\r\n                                </div>\r\n                            </li>\r\n                        )\r\n                    })\r\n                }\r\n                </ul>\r\n            }</div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Para;","import React from \"react\"\r\nimport \"../style.css\"\r\n\r\nimport Editor from \"react-medium-editor\"\r\n\r\nclass Title extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n    }\r\n    handleChange(text, medium) {\r\n        this.props.getNewTitle(text)\r\n    }\r\n    render() {\r\n        return(\r\n            <div \r\n                className=\"Title\" \r\n                style={{\r\n                    padding: '0 70px', \r\n                    textAlign: 'center', \r\n                    margin: '30px 0 10px 0',\r\n                    fontFamily: 'sans-serif', \r\n                    fontWeight: 'bold', \r\n                    fontSize: '1.25rem', \r\n                    lineHeight: '2rem', \r\n                    color: '#555',\r\n                    whiteSpace: \"pre-line\"\r\n                }}><Editor \r\n                        text={this.props.value} \r\n                        options={{ toolbar: { buttons: [ 'bold', 'italic', 'underline'] } }}\r\n                        onChange={(text, medium) => this.handleChange(text, medium)}\r\n                    />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Title;","import React from \"react\";\r\n\r\nclass TrainingEmail extends React.Component {\r\n    render() {\r\n        return(\r\n          <div className=\"TrainingEmail\">\r\n            <table\r\n              border={0}\r\n              cellSpacing={0}\r\n              cellPadding={0}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"100vh\",\r\n                backgroundColor: \"#eaeaea\"\r\n              }}\r\n            >\r\n              <tbody>\r\n                <tr>\r\n                  <td\r\n                    style={{ padding: \"0px 10px 50px 10px\", minWidth: \"700px\" }}\r\n                  >\r\n                    <div style={{ height: \"40px\" }} />\r\n                    <div\r\n                      style={{\r\n                        margin: \"auto\",\r\n                        width: \"650px\",\r\n                        backgroundColor: \"#ffc222\",\r\n                        borderRadius: \"30px 30px 30px 30px\"\r\n                      }}\r\n                    >\r\n                      <div style={{ height: \"5px\" }} />\r\n                      <div\r\n                        style={{\r\n                          backgroundColor: \"white\",\r\n                          borderRadius: \"20px\",\r\n                          paddingBottom: \"50px\"\r\n                        }}\r\n                      >\r\n                        <div style={{ height: \"5px\" }} />\r\n                        <div\r\n                          style={{\r\n                            margin: \"auto\",\r\n                            width: \"640px\",\r\n                            height: \"200px\",\r\n                            borderRadius: \"20px\",\r\n                            backgroundImage:\r\n                              'url(\"https://ci6.googleusercontent.com/proxy/6hM3W5qjyr7DbnKhA6ug8h5ziDWsz78fUOc-yU2P-u9fCRnVCSnT0MAc-3uHFfO1LQE=s0-d-e1-ft#https://i.imgur.com/O5WCblR.jpg\")',\r\n                            backgroundSize: \"70%\",\r\n                            backgroundRepeat: \"repeat\",\r\n                            backgroundPosition: \"center\",\r\n                            border: \"2px solid rgba(100,100,100,.08)\"\r\n                          }}\r\n                        >\r\n                        </div>\r\n                        {/* this line */}\r\n                        {this.props.children}\r\n                      </div>\r\n                    </div>\r\n                    <div\r\n                      style={{\r\n                        textAlign: \"center\",\r\n                        margin: \"30px\",\r\n                        fontSize: \"1.07rem\",\r\n                        fontFamily: \"sans-serif\",\r\n                        color: \"#555\",\r\n                        lineHeight: \"2rem\"\r\n                      }}\r\n                    >\r\n                      Thông tin chi tiết vui lòng liên hệ\r\n                      <br />\r\n                      Email: hr.enactusneu2018\r\n                      <br />\r\n                      Hotline: (+84) 839 085 688 (Ms. Mai)\r\n                    </div>\r\n                    <font color=\"#888888\"></font>\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TrainingEmail;","import React from \"react\";\r\nimport \"../style.css\";\r\n\r\nimport Para from \"./Para\"\r\nimport Title from \"./Title\"\r\n\r\n//template\r\nimport TrainingEmail from \"./template/training_email\"\r\n\r\nclass EditedEmail extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      template: \"Chương trình training\",\r\n      export: null\r\n    };\r\n    this.handleSelectChange = this.handleSelectChange.bind(this);\r\n    this.handleExport = this.handleExport.bind(this);\r\n  }\r\n  handleSelectChange(e) {\r\n    this.setState({\r\n      template: e.target.value\r\n    });\r\n  }\r\n  handleExport() {\r\n    const elTable = document.querySelector('table');\r\n    let range, sel;\r\n    // Ensure that range and selection are supported by the browsers\r\n    if (document.createRange && window.getSelection) {\r\n\r\n      range = document.createRange();\r\n      sel = window.getSelection();\r\n      // unselect any element in the page\r\n      sel.removeAllRanges();\r\n\r\n      try {\r\n        range.selectNodeContents(elTable);\r\n        sel.addRange(range);\r\n      } catch (e) {\r\n        range.selectNode(elTable);\r\n        sel.addRange(range);\r\n      }\r\n\r\n      document.execCommand('copy');\r\n      sel.removeAllRanges();\r\n\r\n      alert('Copied!')\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"EditedEmail\">\r\n        <select\r\n          name=\"templates\"\r\n          id=\"templates\"\r\n          onChange={this.handleSelectChange}\r\n        >\r\n          <option value=\"Chương trình training\">Chương trình Đào tạo</option>\r\n        </select>\r\n        <div className=\"ExportButton\" onClick={this.handleExport}>\r\n            Copy\r\n        </div>\r\n        <div className=\"wrapEditedEmail\">\r\n          {this.state.template === \"Chương trình training\" && (\r\n            <TrainingEmail>\r\n              {this.props.title.type === \"Title\" && this.props.title.data && <Title getNewTitle={this.props.formatTitle} value={this.props.title.data} /> }\r\n              {this.props.text.type === \"TextValue\" && <Para value={this.props.text.data} dragAndDropChild={this.props.dragAndDrop} /> }\r\n            </TrainingEmail>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditedEmail;\r\n","import React from \"react\";\n\nimport ImportSection from \"./component/ImportSection\";\nimport EditedEmail from \"./component/edited_email\";\n\nrequire('medium-editor/dist/css/medium-editor.css');\nrequire('medium-editor/dist/css/themes/beagle.css');\n\nimport \"./style.css\";\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      title: \"\",\n      textValue: [],\n    };\n    this.getTextValue = this.getTextValue.bind(this);\n    this.dragAndDrop = this.dragAndDrop.bind(this);\n    this.formatTitle = this.formatTitle.bind(this);\n  }\n\n  componentWillMount() {\n    if (!localStorage.getItem('title')) {\n      // title\n      localStorage.setItem('title', \"\");\n      const title = localStorage.getItem('title');\n      this.setState({title: title})\n    }\n    this.setState({title: localStorage.getItem('title')})\n    if (!localStorage.getItem('textValue')) {\n      // textValue\n      localStorage.setItem('textValue', JSON.stringify([]));\n      const textValue = localStorage.getItem('textValue');\n      this.setState({textValue: JSON.parse(textValue)})\n    }\n    this.setState({textValue: JSON.parse(localStorage.getItem('textValue'))})\n  }\n\n  getTextValue(value) {\n    let { textValue } = this.state;\n\n    if (value.type === \"List\" || value.type === \"Image\" || value.type === \"Text\") {\n      textValue.push(value)\n      this.setState({ textValue: textValue });\n      localStorage.setItem('textValue', JSON.stringify(textValue));\n    }\n\n    if (value.type === \"Title\") {\n      this.setState({ title: value.data })\n      localStorage.setItem('title', value.data);\n    }\n  }\n  dragAndDrop(newValue) {\n    this.setState({ textValue: newValue })\n    localStorage.setItem('textValue', JSON.stringify(newValue));\n  }\n  formatTitle(newTitle) {\n    localStorage.setItem('title', newTitle);\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        <ImportSection importValue={this.getTextValue} />\n        <EditedEmail \n          text={{ data: this.state.textValue, type: \"TextValue\"}} \n          title={{ data:this.state.title, type: \"Title\" }} \n          dragAndDrop={(newValue) => this.dragAndDrop(newValue)}\n          formatTitle={(newTitle) => this.formatTitle(newTitle)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}